<div class="half-width">
  <h3>Top 10 trainers</h3>
</div>

<div class="half-width">
  <h3>Top 10 clients</h3>
</div>  

<table id="trainer-table" class="graph half-width highcharts-table">
    <thead>
        <tr>
            <th>Trainer</th>
            <th>Total Revenue</th>
            <th>Revenue per month</th>
        </tr>
    </thead>
    <tbody id="trainer-sparkline">
        <% Trainer.by_subtotal_invoicing(["Shipping Fee"]).limit(10).each do |t| %>
          <tr>
              <th><%= link_to t.name, admin_trainer_path(t.id) %></th>
              <td><%= number_to_currency(t.subtotal_sum/100.00) %></td>
              <td width="40%" data-sparkline="<%= t.invoice_items.without_shipping.get_money_min_max("subtotal")[:total].join(', ') %>" />
              <td width="5%"></td>
          </tr>
        <% end %>
    </tbody>
</table>

<table id="client-table" class="graph half-width highcharts-table">
    <thead>
        <tr>
            <th>Client</th>
            <th>Total Expenditure</th>
            <th>Expenditure per month</th>
        </tr>
    </thead>
    <tbody id="client-sparkline">
        <% Client.by_total_invoicing.limit(10).each do |c| %>
          <tr>
              <th><%= link_to c.name, admin_client_path(c.id) %></th>
              <td><%= number_to_currency(c.total_sum/100.00) %></td>
              <td width="40%" data-sparkline="<%= c.invoice_items.get_money_min_max("total")[:total].join(', ') %>"/>
          </tr>
        <% end %>
    </tbody>
</table>

<div id="growth-container" class="graph half-width"></div>
<div id="incremental-container" class="graph half-width"></div>

<div id="daily-container" class="graph half-width"></div>
<div id="weekly-container" class="graph half-width"></div>

<div id="monthly-container" class="graph half-width"></div>
<div id="cash-container" class="graph half-width"></div>

<script>
  
$(function () {
  
  $('#growth-container').highcharts({
      chart: {
        type: 'spline',
      },
      title: {
          text: 'Growth Chart',
          x: -20 //center
      },
      xAxis: {
          type: 'datetime'
      },
      yAxis: {
        min: 0,
        title: {
            text: 'Counts'
        },
        plotLines: [{
            value: 0,
            width: 1,
            color: '#808080'
        }]
      },
      tooltip: {
				formatter: function() {
					return ''+
					Highcharts.dateFormat('%e. %b', this.x) +' -> '+ this.y;
				}
			},
      credits: {
          enabled: false
      },
			plotOptions: {
	      spline: {
          dataLabels: {
            enabled: true
          },
          enableMouseTracking: true
        }
      },
      legend: {
          layout: 'vertical',
          align: 'right',
          verticalAlign: 'middle',
          borderWidth: 0
      },
      series: [
        {
          name: 'Daily Trainers',
          pointStart: <%= @month_start %>,
          pointInterval: 86400000,
          data: <%= Trainer.daily_records_counts_array_in_past_n_days %>
        },
        {
          name: 'Daily Clients',
          pointStart: <%= @month_start %>,
          pointInterval: 86400000,
          data: <%= Client.daily_records_counts_array_in_past_n_days %>
        },
        {
          name: 'Daily Sessions',
          pointStart: <%= @month_start %>,
          pointInterval: 86400000,
          data: <%= ClientSession.daily_records_counts_array_in_past_n_days %>
        }
      ]
  });
  
  $('#incremental-container').highcharts({
    chart: {
      type: 'spline',
    },
    title: {
        text: 'Incremental Growth Chart',
        x: -20 //center
    },
    credits: {
        enabled: false
    },
    xAxis: {
        type: 'datetime'
    },
    yAxis: {
      min: 0,
      title: {
          text: 'Counts'
      },
      plotLines: [{
          value: 0,
          width: 1,
          color: '#808080'
      }]
    },
    tooltip: {
			formatter: function() {
				return ''+
				Highcharts.dateFormat('%e. %b', this.x) +' -> '+ this.y;
			}
		},
		plotOptions: {
      spline: {
        dataLabels: {
          enabled: true
        },
        enableMouseTracking: true
      }
    },
    legend: {
        layout: 'vertical',
        align: 'right',
        verticalAlign: 'middle',
        borderWidth: 0
    },
    series: [
    {
        name: 'Total Trainers',
        pointInterval: 86400000,
        pointStart: <%= @month_start %>,
        data: <%= Trainer.total_records_counts_array_in_past_n_days %>
    },
    {
        name: 'Total Clients',
        pointInterval: 86400000,
        pointStart: <%= @month_start %>,
        data: <%= Client.total_records_counts_array_in_past_n_days %>
    },
    {
        name: 'Total Sessions',
        pointInterval: 86400000,
        pointStart: <%= @month_start %>,
        data: <%= ClientSession.total_records_counts_array_in_past_n_days %>
    }
    ]
  });
  
  $('#cash-container').highcharts({
      chart: {
          type: 'column'
      },
      title: {
          text: 'Session Rates'
      },
      xAxis: {
          categories: <%=  raw Date::ABBR_MONTHNAMES[1..12].rotate(Time.now.month - 12) %>
      },
      yAxis: {
          min: 0,
          title: {
              text: 'Session Rate ($)'
          }
      },
      credits: {
          enabled: false
      },
      tooltip: {
          headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
          pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
              '<td style="padding:0"><b>${point.y:.2f}</b></td></tr>',
          footerFormat: '</table>',
          shared: true,
          useHTML: true
      },
      plotOptions: {
          column: {
              pointPadding: 0.2,
              borderWidth: 0
          }
      },
      series: [{
            type: "column",
            name: 'Highest',
            data: <%= @session_rate[:highest] %>
          }, 
          {
            type: "column",
            name: 'Lowest',
            data: <%= @session_rate[:lowest] %>
          },
          {
            type: 'spline',
            name: 'Average',
            data: <%= @session_rate[:averages] %>,
            marker: {
              lineWidth: 2,
              lineColor: Highcharts.getOptions().colors[3],
              fillColor: 'white'
            }
          }
      ]
  });
  
  $('#daily-container').highcharts({
      chart: {
        type: 'spline',
      },
      title: {
          text: 'Daily Charges',
          x: -20 //center
      },
      xAxis: {
          type: 'datetime'
      },
      yAxis: {
          min: 0,
          title: {
              text: 'Charges'
          },
          plotLines: [{
              value: 0,
              width: 1,
              color: '#808080'
          }]
      },
      tooltip: {
				formatter: function() {
					return ''+
					Highcharts.dateFormat('%e. %b', this.x) +' -> '+ '$' + this.y;
				}
			},
      credits: {
          enabled: false
      },
			plotOptions: {
	      spline: {
          dataLabels: {
            enabled: true
          },
          enableMouseTracking: true
        }
      },
      legend: {
        enabled: false,
      },
      series: [
        {
          pointStart: <%= @daily_start %>,
          pointInterval: 86400000,
          data: <%= InvoiceItem.daily_charges %>
        }
      ]
  });
  
  $('#weekly-container').highcharts({
      chart: {
        type: 'spline',
      },
      title: {
          text: 'Weekly Charges',
          x: -20 //center
      },
      xAxis: {
        type: 'datetime',
        title: {
            text: 'Week Starting'
        }
      },
      yAxis: {
          min: 0,
          title: {
              text: 'Charges'
          },
          plotLines: [{
              value: 0,
              width: 1,
              color: '#808080'
          }]
      },
      tooltip: {
				formatter: function() {
					return ''+
					Highcharts.dateFormat('%e. %b', this.x - 86400000 * 7) + ' - ' + Highcharts.dateFormat('%e. %b', this.x) +' -> '+ '$' + this.y;
				}
			},
      credits: {
          enabled: false
      },
			plotOptions: {
	      spline: {
          dataLabels: {
            enabled: true
          },
          enableMouseTracking: true
        }
      },
      legend: {
        enabled: false,
      },
      series: [
        {
          pointStart: <%= @weekly_start %>,
          pointInterval: 86400000 * 7,
          data: <%= InvoiceItem.weekly_charges %>
        }
      ]
  });  
  
  $('#monthly-container').highcharts({
      chart: {
        type: 'spline',
      },
      title: {
          text: 'Monthly Charges',
          x: -20 //center
      },
      xAxis: {
        type: 'datetime',
        categories: <%=  raw Date::ABBR_MONTHNAMES[1..12].rotate(Time.now.month - 12) %>
      },
      yAxis: {
          min: 0,
          title: {
              text: 'Charges'
          },
          plotLines: [{
              value: 0,
              width: 1,
              color: '#808080'
          }]
      },
      tooltip: {
          headerFormat: '{point.key} -> ${point.y:.2f}',
          pointFormat: '',
          footerFormat: '',
          shared: true,
          useHTML: true
      },
      credits: {
          enabled: false
      },
			plotOptions: {
	      spline: {
          dataLabels: {
            enabled: true
          },
          enableMouseTracking: true
        }
      },
      legend: {
        enabled: false,
      },
      series: [
        {
          data: <%= InvoiceItem.monthly_charges.reverse %>
        }
      ]
  });  
    
  Highcharts.SparkLine = function (a, b, c) {
      var hasRenderToArg = typeof a === 'string' || a.nodeName,
          options = arguments[hasRenderToArg ? 1 : 0],
          defaultOptions = {
              chart: {
                  renderTo: (options.chart && options.chart.renderTo) || this,
                  backgroundColor: null,
                  borderWidth: 0,
                  type: 'area',
                  margin: [2, 0, 2, 0],
                  height: 30,
                  style: {
                      overflow: 'visible'
                  },
                  skipClone: true
              },
              title: {
                  text: ''
              },
              credits: {
                  enabled: false
              },
              exporting: {
                enabled: false
              },
              xAxis: {
                  labels: {
                      enabled: false
                  },
                  title: {
                      text: null
                  },
                  startOnTick: false,
                  endOnTick: false,
                  tickPositions: [],
                  categories: <%=  raw Date::ABBR_MONTHNAMES[1..12].rotate(Time.now.month - 12) %>
              },
              yAxis: {
                  endOnTick: false,
                  startOnTick: false,
                  labels: {
                      enabled: false
                  },
                  title: {
                      text: null
                  },
                  tickPositions: [0]
              },
              legend: {
                  enabled: false
              },
              tooltip: {
                  backgroundColor: null,
                  borderWidth: 0,
                  shadow: false,
                  useHTML: true,
                  hideDelay: 0,
                  shared: true,
                  padding: 0,
                  positioner: function (w, h, point) {
                      return { x: point.plotX - w / 2, y: point.plotY - h };
                  }
              },
              plotOptions: {
                  series: {
                      animation: false,
                      lineWidth: 1,
                      shadow: false,
                      states: {
                          hover: {
                              lineWidth: 1
                          }
                      },
                      marker: {
                          radius: 1,
                          states: {
                              hover: {
                                  radius: 2
                              }
                          }
                      },
                      fillOpacity: 0.25
                  },
                  column: {
                      negativeColor: '#910000',
                      borderColor: 'silver'
                  }
              }
          };

      options = Highcharts.merge(defaultOptions, options);

      return hasRenderToArg ?
          new Highcharts.Chart(a, options, c) :
          new Highcharts.Chart(options, b);
  };

  var start = +new Date(),
      $tds = $('td[data-sparkline]'),
      fullLen = $tds.length,
      n = 0;

  // Creating 153 sparkline charts is quite fast in modern browsers, but IE8 and mobile
  // can take some seconds, so we split the input into chunks and apply them in timeouts
  // in order avoid locking up the browser process and allow interaction.
  function doChunk() {
      var time = +new Date(),
          i,
          len = $tds.length,
          $td,
          stringdata,
          arr,
          data,
          chart;

      for (i = 0; i < len; i += 1) {
          $td = $($tds[i]);
          stringdata = $td.data('sparkline');
          arr = stringdata.split('; ');
          data = $.map(arr[0].split(', '), parseFloat);
          chart = {};

          if (arr[1]) {
              chart.type = arr[1];
          }
          $td.highcharts('SparkLine', {
              series: [{
                  name: 'Total',
                  data: data
              }],
              tooltip: {
                  headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                  pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                      '<td style="padding:0"><b>${point.y:.2f}</b></td></tr>',
                  footerFormat: '</table>',
                  shared: true,
                  useHTML: true
              },
              chart: chart
          });

          n += 1;

          // If the process takes too much time, run a timeout to allow interaction with the browser
          if (new Date() - time > 500) {
              $tds.splice(0, i + 1);
              setTimeout(doChunk, 0);
              break;
          }

      }
  }
  doChunk();
      
});
    
</script>